var __this = this;try {  Aardwolf.pushStack("<toplevel>", "/calc.js", '0');  var aardwolfEvalFunc = function(aardwolfEval) { return eval(aardwolfEval); };
Aardwolf.updatePosition("/calc.js", 2, false, aardwolfEvalFunc);var $number1;
Aardwolf.updatePosition("/calc.js", 3, false, aardwolfEvalFunc);var $number2;
Aardwolf.updatePosition("/calc.js", 4, false, aardwolfEvalFunc);var $number3;
Aardwolf.updatePosition("/calc.js", 5, false, aardwolfEvalFunc);var $result;

Aardwolf.updatePosition("/calc.js", 7, false, aardwolfEvalFunc);$(function() {var __this = this;try {  Aardwolf.pushStack("<anonymous>", "/calc.js", '7');  var aardwolfEvalFunc = function(aardwolfEval) { return eval(aardwolfEval); };
    /* Locate number input fields */
    Aardwolf.updatePosition("/calc.js", 9, false, aardwolfEvalFunc);$number1 = $('#number1');
    Aardwolf.updatePosition("/calc.js", 10, false, aardwolfEvalFunc);$number2 = $('#number2');
    Aardwolf.updatePosition("/calc.js", 11, false, aardwolfEvalFunc);$number3 = $('#number3');
    Aardwolf.updatePosition("/calc.js", 12, false, aardwolfEvalFunc);$result = $('#result');
    
    Aardwolf.updatePosition("/calc.js", 14, false, aardwolfEvalFunc);$('#calculate').click(calculate);
    Aardwolf.updatePosition("/calc.js", 15, false, aardwolfEvalFunc);$('#reset').click(reset);
} catch (aardwolfEx) { if (!aardwolfEx.rethrown) {  Aardwolf.reportException(aardwolfEx); } aardwolfEx.rethrown = true; throw aardwolfEx;} finally {  Aardwolf.popStack();}});

/**
 * Performs calculation
 */
Aardwolf.updatePosition("/calc.js", 21, false, aardwolfEvalFunc);function calculate() {var __this = this;try {  Aardwolf.pushStack("calculate", "/calc.js", '21');  var aardwolfEvalFunc = function(aardwolfEval) { return eval(aardwolfEval); };
    /* Read entered numbers */
    Aardwolf.updatePosition("/calc.js", 23, false, aardwolfEvalFunc);var a = Number($number1.val());
    Aardwolf.updatePosition("/calc.js", 24, false, aardwolfEvalFunc);var b = Number($number2.val());
    Aardwolf.updatePosition("/calc.js", 25, false, aardwolfEvalFunc);var c = Number($number3.val());

    Aardwolf.updatePosition("/calc.js", 27, false, aardwolfEvalFunc);function performAddition(n1, n2) {var __this = this;try {  Aardwolf.pushStack("performAddition", "/calc.js", '27');  var aardwolfEvalFunc = function(aardwolfEval) { return eval(aardwolfEval); };
        Aardwolf.updatePosition("/calc.js", 28, false, aardwolfEvalFunc);console.log('Performing addition of '+n1+' and '+n2+'.');
        Aardwolf.updatePosition("/calc.js", 29, false, aardwolfEvalFunc);return n1 + n2;
    } catch (aardwolfEx) { if (!aardwolfEx.rethrown) {  Aardwolf.reportException(aardwolfEx); } aardwolfEx.rethrown = true; throw aardwolfEx;} finally {  Aardwolf.popStack();}}
    
    Aardwolf.updatePosition("/calc.js", 32, false, aardwolfEvalFunc);function performMultiplication(n1, n2) {var __this = this;try {  Aardwolf.pushStack("performMultiplication", "/calc.js", '32');  var aardwolfEvalFunc = function(aardwolfEval) { return eval(aardwolfEval); };
        Aardwolf.updatePosition("/calc.js", 33, false, aardwolfEvalFunc);console.log('Performing multiplication of '+n1+' and '+n2+'.');
        
        Aardwolf.updatePosition("/calc.js", 35, false, aardwolfEvalFunc);setTimeout(function() {var __this = this;try {  Aardwolf.pushStack("<anonymous>", "/calc.js", '35');  var aardwolfEvalFunc = function(aardwolfEval) { return eval(aardwolfEval); };
            /* Intended to demonstrate exception reporting in async calls */
            Aardwolf.updatePosition("/calc.js", 37, false, aardwolfEvalFunc);nonExistingObjectForExceptionReportingDemonstration.bar();
        } catch (aardwolfEx) { if (!aardwolfEx.rethrown) {  Aardwolf.reportException(aardwolfEx); } aardwolfEx.rethrown = true; throw aardwolfEx;} finally {  Aardwolf.popStack();}}, 1000);
        
        Aardwolf.updatePosition("/calc.js", 40, false, aardwolfEvalFunc);return n1 * n2;
    } catch (aardwolfEx) { if (!aardwolfEx.rethrown) {  Aardwolf.reportException(aardwolfEx); } aardwolfEx.rethrown = true; throw aardwolfEx;} finally {  Aardwolf.popStack();}}
    
    Aardwolf.updatePosition("/calc.js", 43, false, aardwolfEvalFunc);var sum = performAddition(a, b);
    Aardwolf.updatePosition("/calc.js", 44, false, aardwolfEvalFunc);var total = performMultiplication(sum, c);
    
    /* Update result field */
    Aardwolf.updatePosition("/calc.js", 47, false, aardwolfEvalFunc);$result.text(total);
} catch (aardwolfEx) { if (!aardwolfEx.rethrown) {  Aardwolf.reportException(aardwolfEx); } aardwolfEx.rethrown = true; throw aardwolfEx;} finally {  Aardwolf.popStack();}}

/**
 * Clears the result and input fields
 */
Aardwolf.updatePosition("/calc.js", 53, false, aardwolfEvalFunc);function reset() {var __this = this;try {  Aardwolf.pushStack("reset", "/calc.js", '53');  var aardwolfEvalFunc = function(aardwolfEval) { return eval(aardwolfEval); };
    Aardwolf.updatePosition("/calc.js", 54, true, aardwolfEvalFunc);/*debugger*/; // the 'debugger' statement works also...
    Aardwolf.updatePosition("/calc.js", 55, false, aardwolfEvalFunc);$number1.val('');
    Aardwolf.updatePosition("/calc.js", 56, false, aardwolfEvalFunc);$number2.val('');
    Aardwolf.updatePosition("/calc.js", 57, false, aardwolfEvalFunc);$number3.val('');
    Aardwolf.updatePosition("/calc.js", 58, false, aardwolfEvalFunc);$result.text('');
} catch (aardwolfEx) { if (!aardwolfEx.rethrown) {  Aardwolf.reportException(aardwolfEx); } aardwolfEx.rethrown = true; throw aardwolfEx;} finally {  Aardwolf.popStack();}}

} catch (aardwolfEx) { if (!aardwolfEx.rethrown) {  Aardwolf.reportException(aardwolfEx); } aardwolfEx.rethrown = true; throw aardwolfEx;} finally {  Aardwolf.popStack();}